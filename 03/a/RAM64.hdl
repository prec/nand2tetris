// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
	RAM8(in=in, out=a, load=loada, address=address[3..5]);
	RAM8(in=in, out=b, load=loadb, address=address[3..5]);
	RAM8(in=in, out=c, load=loadc, address=address[3..5]);
	RAM8(in=in, out=d, load=loadd, address=address[3..5]);
	RAM8(in=in, out=e, load=loade, address=address[3..5]);
	RAM8(in=in, out=f, load=loadf, address=address[3..5]);
	RAM8(in=in, out=g, load=loadg, address=address[3..5]);
	RAM8(in=in, out=h, load=loadh, address=address[3..5]);
	Mux8Way16(a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h, sel=address[0..2], out=out);
}